#Область ПрограммныйИнтерфейс

// Инициализация.
// 
// Параметры:
//  Этот - Структура - Текущий объект
Процедура Инициализация(Этот) Экспорт

	// TODO: нужно чтобы эти свойства были немутабельными.
	Этот.Вставить("ПрограммныйИнтерфейс", Новый Массив());
	Этот.Вставить("Переменные", Новый Массив());
	Этот.Вставить("Родитель");
	Этот.Вставить(
		"Перем",
		Обработки.ОП_МетодОбъекта.Метод("НоваяПеременная", ОП_Класс, Этот)
	);
	Этот.Вставить(
		"Метод",
		Обработки.ОП_МетодОбъекта.Метод("НовыйМетод", ОП_Класс, Этот)
	);
	Этот.Вставить(
		"Расширяет",
		Обработки.ОП_МетодОбъекта.Метод("Расширить", ОП_Класс, Этот)
	);
	
КонецПроцедуры

// Добавляет описание переменной экземпляра класса
// 
// Параметры:
//  Этот - Структура - Текущий объект
//  Имя - Строка - Имя переменной
//  ЗначениеПоУмолчанию - Произвольный - Значение по умолчанию
// 
// Возвращаемое значение:
//  Структура:
//  * Имя - Строка
//  * ЗначениеПоУмолчанию - Строка
//  * МодификаторДоступа - Строка
Функция НоваяПеременная(Этот, Имя, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Переменная = Переменная(Этот);
	Переменная.Имя = Имя;
	Переменная.ЗначениеПоУмолчанию = ЗначениеПоУмолчанию;
	Этот.Переменные.Добавить(Переменная);
	Возврат Переменная;

КонецФункции

// Добавляет описание метода
// 
// Параметры:
//  Этот - Структура - Текущий объект
//  Имя - Строка - Имя переменной
//  
// Возвращаемое значение:
//  Структура:
//  * Имя - Строка
//  * Класс - см. ОП_Классы.Класс
//  * Переопределяет - см. ОбработкаОбъект.ОП_МетодОбъекта
Функция НовыйМетод(Этот, Имя) Экспорт
	
	Метод = Метод(Этот);
	Метод.Имя = Имя;
	Этот.ПрограммныйИнтерфейс.Добавить(Метод);
	Возврат Метод;

КонецФункции

// Расширяет класс с помощью другого класса.
// 
// Параметры:
//  Этот - см. ОП_Классы.Класс
//  Модуль - ОбщийМодуль - Модуль класса, на основе которого текущий класс расширится
Процедура Расширить(Этот, Модуль) Экспорт
	
	Родитель = ОП_Классы.Класс(Модуль);
	Этот.Родитель = Родитель;
	
	Для каждого Переменная Из Родитель.Переменные Цикл
		Этот.Переменные.Добавить(Переменная);
	КонецЦикла;
	Для каждого Метод Из Родитель.ПрограммныйИнтерфейс Цикл
		Этот.ПрограммныйИнтерфейс.Добавить(Метод);
	КонецЦикла;
	
КонецПроцедуры
		
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Переменная(Класс)

	Переменная = ОП_КлассыСлужебный.Базовый(Класс);
	ОП_Переменная.Инициализация(Переменная);
	Возврат Переменная;

КонецФункции

Функция Метод(Класс)
	
	Метод = ОП_КлассыСлужебный.Базовый(Класс);
	ОП_Метод.Инициализация(Метод);
	Возврат Метод;
	
КонецФункции

#КонецОбласти