#Область ПрограммныйИнтерфейс

// Выполняет процедуру объекта.
// 
// Параметры:
//  Объект - Произвольный - Объект
//  Метод - Строка - Метод
//  Параметры - Массив из Произвольный - Параметры
Процедура ВыполнитьМетодОбъекта(Объект, Метод, Параметры) Экспорт
	
	ПроверитьИмяМетода(Метод, "ОП_ОбщегоНазначения.ВыполнитьМетодОбъекта");
	//@skip-check server-execution-safe-mode
	Выполнить ВызовМетода(Метод, Параметры);

КонецПроцедуры	

// Вызывает функцию объекта.
// 
// Параметры:
//  Объект - Произвольный - Объект
//  Метод - Строка - Метод
//  Параметры - Массив из Произвольный - Параметры
// 
// Возвращаемое значение:
//  Произвольный
Функция ВызватьФункциюОбъекта(Объект, Метод, Параметры) Экспорт

	ПроверитьИмяМетода(Метод, "ОП_ОбщегоНазначения.ВызватьФункциюОбъекта");		
	УстановитьБезопасныйРежим(Истина);
	Значение = Вычислить(ВызовМетода(Метод, Параметры));
	УстановитьБезопасныйРежим(Ложь);
	Возврат Значение;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьИмяМетода(Имя, Инициатор)

	Попытка
		Тест = Новый Структура;
		Тест.Вставить(Имя, Имя);
	Исключение
		ВызватьИсключение(
			СтрШаблон(
				НСтр("ru = 'Некорректное значение параметра %1 (%2) в %3.'"), 
				"Имя",
				Имя,
				Инициатор
			),
			КатегорияОшибки.ОшибкаКонфигурации
		);
	КонецПопытки;

КонецПроцедуры

Функция ПараметрыКакСтрока(Параметры) Экспорт

	Строка = "";
	Если Параметры <> Неопределено И Параметры.Количество() > 0 Тогда
		Для Индекс = 0 По Параметры.ВГраница() Цикл 
			Строка = Строка + "Параметры[" + XMLСтрока(Индекс) + "],";
		КонецЦикла;
		Строка = Сред(Строка, 1, СтрДлина(Строка) - 1);
	КонецЕсли;
	Возврат Строка

КонецФункции

Функция ВызовМетода(Метод, Параметры)
	
	Возврат "Объект." + Метод + "(" + ПараметрыКакСтрока(Параметры) + ")"

КонецФункции
	
#КонецОбласти
