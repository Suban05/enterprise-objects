// @strict-types


#Область ПрограммныйИнтерфейс

// Экземпляр.
// 
// Параметры:
//  Класс - см. ОП_Классы.Класс
// 
// Возвращаемое значение:
//  Структура:
//  * Класс - см. ОП_Классы.Класс
//  * Присваиватели - ФиксированныйМассив из ОбработкаОбъект.ОП_Присваиватель
Функция Экземпляр(Класс) Экспорт

	Объект = Новый Структура();
	Объект.Вставить("Класс", Класс);
	Для каждого Метод Из Класс.ПрограммныйИнтерфейс Цикл
		Объект.Вставить(Метод.Имя, Обработки.ОП_МетодОбъекта.Метод(Метод.Имя, Класс.Модуль, Объект));
	КонецЦикла;
	Присваиватели = Новый Массив(); // Массив из ОбработкаОбъект.ОП_Присваиватель
	Для каждого Переменная Из Класс.Переменные Цикл
		Объект.Вставить(Переменная.Имя, Переменная.ЗначениеПоУмолчанию);
		Если Переменная.МодификаторДоступа = ОП_Перечисления.МодификаторыДоступа().Экспорт Тогда
			Присваиватели.Добавить(
				Обработки.ОП_Присваиватель.Присваиватель(
					Объект,
					Переменная.Имя,
					Переменная.ЗначениеПоУмолчанию
				)
			);
		КонецЕсли;
	КонецЦикла;
	Объект.Вставить("Присваиватели", Новый ФиксированныйМассив(Присваиватели));
	Возврат Объект;

КонецФункции

// Вызывает событие ПриСозданииОбъекта во время создании экземпляра.
// 
// Параметры:
//  Модуль - ОбщийМодуль - Модуль
//  Параметры - Массив из Произвольный - 
Процедура ПриСоздании(Модуль, Параметры) Экспорт
	
	Конструктор = "ПриСозданииОбъекта";
	Если ОП_Рефлексия.МетодОбъектаСуществует(Модуль, Конструктор) Тогда
		ОП_Рефлексия.ВызватьПроцедуруОбъекта(Модуль, Конструктор, Параметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
