// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает экземпляр метода с типом Метод.
// 
// Параметры:
// 	Имя - Строка - Имя метода
//  Модуль - ОбщийМодуль - модуль с кодом
//  Экземпляр - Структура
//
// Возвращаемое значение:
//  ОбработкаОбъект.ОП_МетодОбъекта - Метод
Функция Метод(Имя, Модуль, Экземпляр) Экспорт
	Метод = МетодПоТипу(Имя, Модуль, ОП_Перечисления.ТипыМетодов().Метод);
	Метод.УстановитьОбъект(Экземпляр);
	Возврат Метод;
КонецФункции

// Создает экземпляр метода с типом Конструктор.
// 
// Параметры:
//  Модуль - ОбщийМодуль - модуль с кодом
//
// Возвращаемое значение:
//  ОбработкаОбъект.ОП_МетодОбъекта - Метод
Функция Конструктор(Модуль) Экспорт
	Возврат МетодПоТипу("Новый", Модуль, ОП_Перечисления.ТипыМетодов().Конструктор);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает экземпляр метода по указанному типу
// 
// Параметры:
// 	ИмяМетода - Строка - Имя метода
//  Модуль - ОбщийМодуль - модуль с кодом
//  Тип - Строка - тип из см. ОП_Перечисления.ТипыМетодов
//
// Возвращаемое значение:
//  ОбработкаОбъект.ОП_МетодОбъекта - Метод
Функция МетодПоТипу(ИмяМетода, Модуль, Тип)
	
	Метод = Создать();
	Метод.УстановитьИмяМетода(ИмяМетода);
	Метод.УстановитьМодуль(Модуль);
	Метод.УстановитьТипМетода(Тип);
	Возврат Метод;

КонецФункции

#КонецОбласти

#КонецЕсли
