// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Экземпляр; // Структура
Перем Поле; // Строка
Перем ЗначениеПоУмолчанию; // Произвольный

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Выполняет метод присваивания или получения значения.
// При пустом значении параметра срабатывает геттер.
// При заполненном параметре срабатывает сеттер.
// 
// Параметры:
//  Параметр - Null, Произвольный - Параметр
// 
// Возвращаемое значение:
//  Произвольный
Функция _(Параметр = Null) Экспорт

	Если Параметр <> Null Тогда
		Экземпляр[Поле] = Параметр;
	Иначе
		Возврат Экземпляр[Поле];
	КонецЕсли;
	
КонецФункции	

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Установить объект.
// 
// Параметры:
//  Объект - Структура - Объект
Процедура УстановитьОбъект(Объект) Экспорт
	ПроверитьЗаполненность("Экземпляр", Экземпляр);
	Экземпляр = Объект;
КонецПроцедуры

// Установить поле.
// 
// Параметры:
//  Поле_ - Строка - Объект
Процедура УстановитьПоле(Поле_) Экспорт
	ПроверитьЗаполненность("Поле", Поле);
	Поле = Поле_;
КонецПроцедуры

// Установить значение по умолчанию.
// 
// Параметры:
//  Значение - Произвольный - Объект
Процедура УстановитьЗначениеПоУмолчанию(Значение) Экспорт
	ПроверитьЗаполненность("ЗначениеПоУмолчанию", ЗначениеПоУмолчанию);
	ЗначениеПоУмолчанию = Значение;
	_(Значение);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполненность(Поле, Значение)

	Если ЗначениеЗаполнено(Значение) Тогда
		ВызватьИсключение(СтрШаблон("Поле %1 недоступно для записи", Поле));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
